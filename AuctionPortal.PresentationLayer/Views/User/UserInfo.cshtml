@model AuctionPortal.BusinessLayer.DataTransferObjects.AuctioneerDto

@{
    ViewBag.Title = "User Profile";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<h2>Profile</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    if (!Request.IsAuthenticated)
    {
        Response.Redirect("~/User/NotLoggedIn");
    }

    <div>
        <div class="row">
            <h5 class="col-md-2 col-md-offset-1">Name:</h5>
            <h5 class="col-md-6">@Model.FirstName @Model.LastName</h5>
        </div>

        <div class="row">
            <h5 class="col-md-2 col-md-offset-1">Address:</h5>
            <h5 class="col-md-6">@Model.Address</h5>
        </div>

        <div class="row">
            <h5 class="col-md-2 col-md-offset-1">Contact email:</h5>
            <h5 class="col-md-6">@Model.Email</h5>
        </div>

        <div class="row">
            <h5 class="col-md-2 col-md-offset-1">Additional info:</h5>
            <h5 class="col-md-6">@Model.Info</h5>
        </div>

        <div class="row">
            <h5 class="col-md-2 col-md-offset-1">Rating:</h5>
            <h5 class="col-md-6">@Model.Rating</h5>
        </div>

        @if (Model.UserName.Equals(User.Identity.Name))
         {
            <div class="row">
                <h5 class="col-md-2 col-md-offset-1">Birth date:</h5>
                <h5 class="col-md-6">@Model.BirthDate.ToShortDateString()</h5>
            </div>

            <div class="row">
                <h5 class="col-md-2 col-md-offset-1">Availible money:</h5>
                <h5 class="col-md-6">@Model.Money</h5>
            </div>
         }

        <div>
            <p class="btn btn-default"> @Html.ActionLink("Sold Products", "SoldProducts", "Products", new { id = Model.Id }, null) </p>
            <p class="btn btn-default"> @Html.ActionLink("Actual Products", "ActualProducts", "Products", new { id = Model.Id }, null) </p>
            <p class="btn btn-default"> @Html.ActionLink("Bought Products", "BoughtProducts", "Products", new { id = Model.Id }, null) </p>
        </div>

        @if (Model.UserName.Equals(User.Identity.Name))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Money, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-20">
                    @Html.EditorFor(model => model.Money, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="col-md-offset-2 col-md-20">
                    <input type="submit" value="AddMoney" class="btn btn-default" name="action:addmoney" />
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Info, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-20">
                    @Html.EditorFor(model => model.Info, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="col-md-offset-2 col-md-20">
                    <input type="submit" value="AddInfo" class="btn btn-default" name="action:addinfo" />
                </div>
            </div>

        }
        else
        {
            if (User.IsInRole("admin"))
            {
                <div>
                    <p>Admin abilities</p>
                    <p class="btn btn-default"> @Html.ActionLink("Delete Auctioneer", "DeleteAuctioneer", new { id = Model.Id.ToString() }) </p>
                    <p class="btn btn-default">@Html.ActionLink("Make him Admin", "BecomeAdmin", "Account", new { name = Model.UserName }, null)</p>
                    <p class="btn btn-default">@Html.ActionLink("Make him no Admin", "BecomeNoAdmin", "Account", new { name = Model.UserName }, null)</p>
                </div>
            }

            <div class="form-group">
                @Html.LabelFor(model => model.NevReview.Rating, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.NevReview.Rating, new SelectList(new List<int>() { 1, 2, 3, 4, 5 }), "0", new { @class = "form-control" })

                </div>
                @Html.LabelFor(model => model.NevReview.Info, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NevReview.Info, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NevReview.Info, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-offset-2 col-md-20">
                    <input type="submit" value="Create review" class="btn btn-default" name="action:createReview" />
                </div>
            </div>

            <div class="panel panel-default col-md-9 col-sm-8 col-xs-12">
                <ul class="panel-heading panel-head list-group">Reviews:</ul>
                @{foreach (var review in Model.Review)
                    {
                        <div class="col-md-4 col-sm-6 col-xs-12 list-group-item-nonclickable thumbnail">
                            <div class="col-md-12  col-sm-12 col-xs-12" )>

                                <div class="caption text-center">
                                    <h4 style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;" id="thumbnail-label">@review.Reviewer.FirstName @review.Reviewer.LastName</h4>
                                </div>
                                <div class="caption text-center">
                                    <h5 style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;" id="thumbnail-label">Rating : @review.Rating</h5>
                                </div>
                                <p style="height: 80px; width: 100%; overflow: hidden; text-overflow: ellipsis; white-space: normal; text-align: justify;">@review.Info</p>

                            </div>
                        </div>
                    }}
            </div>
        }

    </div>
}

